{"version":3,"sources":["webpack:///webpack/bootstrap 8b1c93d369156f7856dc","webpack:///./node_modules/@dojo/core/Destroyable.mjs","webpack:///./node_modules/@dojo/core/Evented.mjs","webpack:///./node_modules/@dojo/core/lang.mjs","webpack:///./node_modules/@dojo/core/uuid.mjs","webpack:///./node_modules/@dojo/has/has.mjs","webpack:///./node_modules/@dojo/shim/Map.mjs","webpack:///./node_modules/@dojo/shim/Promise.mjs","webpack:///./node_modules/@dojo/shim/Set.mjs","webpack:///./node_modules/@dojo/shim/Symbol.mjs","webpack:///./node_modules/@dojo/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/shim/array.mjs","webpack:///./node_modules/@dojo/shim/global.mjs","webpack:///./node_modules/@dojo/shim/number.mjs","webpack:///./node_modules/@dojo/shim/object.mjs","webpack:///./node_modules/@dojo/shim/string.mjs","webpack:///./node_modules/@dojo/shim/support/has.mjs","webpack:///./node_modules/@dojo/shim/support/queue.mjs","webpack:///./node_modules/@dojo/shim/support/util.mjs","webpack:///./node_modules/@dojo/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/widget-core/d.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/afterRender.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/widget-core/diff.mjs","webpack:///./node_modules/@dojo/widget-core/meta/Base.mjs","webpack:///./node_modules/@dojo/widget-core/meta/Dimensions.mjs","webpack:///./node_modules/@dojo/widget-core/mixins/Projector.mjs","webpack:///./node_modules/@dojo/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/common/styles/base.m.css?b0b4","webpack:///./src/common/util.ts","webpack:///./src/global-event/index.ts","webpack:///./src/icon/index.ts","webpack:///./src/theme/icon.m.css?2aa0","webpack:///./src/theme/title-pane.m.css?a3c0","webpack:///./src/title-pane/index.ts","webpack:///./src/title-pane/styles/title-pane.m.css?5093"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","noop","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_Promise__","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","Array","isArray","__WEBPACK_IMPORTED_MODULE_0__lang__","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","regexMap","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Map__","Evented","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","map","_addListener","listeners","target","sources","_mixin","deep","inherited","destructor","length","slice","shouldDeepCopyObject","value","toString","copyArray","array","item","kwArgs","copied","copiedClone","source","undefined","key","targetValue","r","Math","random","v","testCache","testFunctions","testThenables","globalScope","window","global","self","staticFeatures","DojoHasEnvironment","staticCache","apply","add","feature","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","result","document","location","process","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","ShimPromise","__WEBPACK_IMPORTED_MODULE_0__global__","Promise","Set","Symbol","wellKnown","__WEBPACK_IMPORTED_MODULE_2__support_util__","for","WeakMap","from","of","copyWithin","fill","find","findIndex","includes","__WEBPACK_IMPORTED_MODULE_4__support_util__","globalObject","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__dojo_has_has__","every","Number","POSITIVE_INFINITY","e","imul","Observable","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","Animation","KeyframeEffect","executeTask","isActive","callback","getQueueHandle","enqueue","queue","addEventListener","data","stopPropagation","shift","queueTask","id","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","args","Injector","__WEBPACK_IMPORTED_MODULE_0__dojo_core_Evented__","payload","_payload","emit","NodeEventType","_nodeMap","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_Map__","element","Widget","Projector","clear","WIDGET_BASE_TYPE","__WEBPACK_IMPORTED_MODULE_2__dojo_shim_Symbol__","isWidgetBaseConstructor","_type","Registry","__WEBPACK_IMPORTED_MODULE_3__dojo_core_Evented__","widgetLabel","action","label","_widgetRegistry","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Promise__","widgetCtor","emitLoadedEvent","error","_injectorRegistry","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__dojo_core_Evented__","_registry","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","injector","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","decoratorMap","boundAuto","__WEBPACK_IMPORTED_MODULE_3__diff__","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","__WEBPACK_IMPORTED_MODULE_5__NodeHandler__","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","__WEBPACK_IMPORTED_MODULE_6__vdom__","dirty","onAttach","onDetach","nodeHandler","coreProperties","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","instanceData","__WEBPACK_IMPORTED_MODULE_4__RegistryHandler__","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","_mapDiffPropertyReactions","reaction","previousProperties","newProperties","children","dNode","_runBeforeRenders","runAfterRenders","__WEBPACK_IMPORTED_MODULE_2__d__","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","_buildDecoratorList","reduce","reactionPropertyMap","reactionArguments","__WEBPACK_IMPORTED_MODULE_7__Registry__","_bindFunctionPropertyMap","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_WeakMap__","bindInfo","boundFunc","scope","beforeProperties","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","widgetConstructor","WNODE","tag","propertiesOrChildren","deferredPropertiesCallback","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","text","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_Symbol__","isWNode","child","isVNode","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","propertyKey","addDecorator","alwaysRender","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","customElement","childType","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","DOJO","__customElementDescriptor","diffProperty","diffFunction","reactionFunction","handleDecorator","handler","descriptor","registeredInjectorsMap","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_WeakMap__","inject","getProperties","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","getInjector","registeredInjectors","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","shallow","validOldProperty","validNewProperty","previousKeys","newKeys","some","Base","__WEBPACK_IMPORTED_MODULE_0__dojo_core_Destroyable__","_requestedNodeKeys","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_Set__","_invalidate","_bind","stringKey","defaultDimensions","offset","height","left","top","width","position","bottom","right","scroll","size","Dimensions","__WEBPACK_IMPORTED_MODULE_0__Base__","getNode","__WEBPACK_IMPORTED_MODULE_1__dojo_core_lang__","boundingDimensions","getBoundingClientRect","offsetHeight","offsetLeft","offsetTop","offsetWidth","scrollHeight","scrollLeft","scrollTop","scrollWidth","ProjectorAttachState","AttachType","ProjectorMixin","_async","_projectorProperties","_projectionOptions","transitions","__WEBPACK_IMPORTED_MODULE_2__animations_cssTransitions__","root","body","projectorState","Detached","options","Append","_attach","Merge","Attached","_root","async","doc","previousRoot","createDocumentFragment","__setChildren__","__setProperties__","__setCoreProperties__","_projection","childNodes","outerHTML","__WEBPACK_IMPORTED_MODULE_4__d__","_attachHandle","sync","__WEBPACK_IMPORTED_MODULE_5__vdom__","append","merge","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_3__decorators_afterRender__","Function","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","THEME_KEY","ThemedMixin","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","classes","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","_a","currentClassNames","baseClass","themeKey","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","CustomElementChildType","DomToWidgetWrapper","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_8__decorators_alwaysRender__","create","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","__WEBPACK_IMPORTED_MODULE_3__dojo_shim_array__","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","__WEBPACK_IMPORTED_MODULE_6__Registry__","themeContext","__WEBPACK_IMPORTED_MODULE_7__mixins_Themed__","_getTheme","__WEBPACK_IMPORTED_MODULE_5__dojo_shim_global__","__WEBPACK_IMPORTED_MODULE_2__mixins_Projector__","_projector","setProperties","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","register","customElements","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","emptyArray","widgetInstanceMap","__WEBPACK_IMPORTED_MODULE_4__dojo_shim_WeakMap__","projectorStateMap","same","dnode1","dnode2","instance","missingTransition","checkStyleValue","styleValue","updateEvent","currentValue","projectionOptions","previousValue","projectorInstance","eventMap","nodeMap","previousEvent","evt","addClasses","classNames","split","removeClasses","focusNode","propValue","deferredRenderCallbacks","focus","removeOrphanedEvents","onlyEvents","propName","isEvent","substr","updateAttribute","attrName","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","updateAttributes","previousAttributes","attrNames","attrCount","updateProperties","includesEventsAndAttributes","propertiesUpdated","propNames","propCount","previousClasses","currentClasses","newClasses","previousClassName","classIndex","styleNames","styleCount","j","styleName","newStyleValue","styleApplyer","domValue","lastIndexOf","findIndexOfChild","sameAs","start","toInternalWNode","rendered","filterAndDecorateChildren","nodeAdded","dnode","callOnDetach","dNodes","parentInstance","nodeToRemove","removeChild","pointerEvents","removeDomNode","checkDistinguishable","indexToCheck","nodeIdentifier","parentName","updateChildren","parentVNode","oldChildren","newChildren","oldChildrenLength","newChildrenLength","depth","oldIndex","newIndex","textUpdated","oldChild","newChild","inserted","addDeferredProperties","updateDom","findOldIndex","addChild","insertBefore","nextIndex","createDom","afterRenderCallbacks","addChildren","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_array__","domElement","toUpperCase","initPropertiesAndChildren","parentInstanceData","__WEBPACK_IMPORTED_MODULE_3__Registry__","renderQueue","scheduleRender","__render__","filteredRendered","addRoot","mergeElement","ownerDocument","createElementNS","appendChild","newDomNode","createTextNode","replaceChild","previous","previousRendered","updated","current","buildPreviousProperties","updateAnimation","vnode","decoratedDeferredProperties","runDeferredRenderCallbacks","__WEBPACK_IMPORTED_MODULE_0__dojo_shim_global__","runAfterRenderCallbacks","requestIdleCallback","setTimeout","renderScheduled","renders","sort","a","b","dom","finalProjectorOptions","projectorOptions","defaults","getProjectionOptions","rootNode","projection","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","Reflect","decorate","metadataKey","metadataValue","metadata","setPrototypeOf","g","eval"," _key","visuallyHidden","focusable","hidden","Keys","aria","GlobalEvent","__WEBPACK_IMPORTED_MODULE_2__dojo_widget_core_WidgetBase__","_listeners","previousListeners","newListeners","registeredListeners","newListener","__WEBPACK_IMPORTED_MODULE_1__dojo_shim_global__","_registerListeners","_removeAllRegisteredListeners","__WEBPACK_IMPORTED_MODULE_3__dojo_widget_core_decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_4__dojo_widget_core_diff__","ThemedBase","__WEBPACK_IMPORTED_MODULE_2__dojo_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_1__dojo_widget_core_WidgetBase__","IconBase","altText","__WEBPACK_IMPORTED_MODULE_3__dojo_widget_core_d__","__WEBPACK_IMPORTED_MODULE_6__common_styles_base_m_css__","__WEBPACK_IMPORTED_MODULE_5__theme_icon_m_css__","__WEBPACK_IMPORTED_MODULE_4__common_util__","renderAltText","__WEBPACK_IMPORTED_MODULE_7__dojo_widget_core_decorators_customElement__","icon","downIcon","leftIcon","rightIcon","closeIcon","plusIcon","minusIcon","checkIcon","upIcon","upAltIcon","downAltIcon","searchIcon","barsIcon","settingsIcon","alertIcon","helpIcon","infoIcon","phoneIcon","editIcon","dateIcon","linkIcon","locationIcon","secureIcon","mailIcon","closeable","arrow","open","content","titleButton","contentTransition","__WEBPACK_IMPORTED_MODULE_4__dojo_widget_core_WidgetBase__","TitlePaneBase","_id","__WEBPACK_IMPORTED_MODULE_1__dojo_core_uuid__","_onWindowResize","_toggle","onRequestClose","onRequestOpen","__WEBPACK_IMPORTED_MODULE_6__styles_title_pane_m_css__","__WEBPACK_IMPORTED_MODULE_7__theme_title_pane_m_css__","__WEBPACK_IMPORTED_MODULE_5__icon_index__","contentDimensions","__WEBPACK_IMPORTED_MODULE_8__dojo_widget_core_meta_Dimensions__","marginTop","headingLevel","transition","_open","__WEBPACK_IMPORTED_MODULE_10__global_event_index__","resize","aria-level","getModifierClasses","getFixedModifierClasses","role","aria-controls","aria-expanded","disabled","onclick","_onTitleClick","renderExpandIcon","getButtonContent","aria-hidden","aria-labelledby","styles","getPaneStyles","getPaneContent","__WEBPACK_IMPORTED_MODULE_9__dojo_widget_core_decorators_customElement__","rootFixed","titleFixed","titleButtonFixed","contentFixed","closeableFixed"],"mappings":"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","file":"title-pane-0.6.1.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b1c93d369156f7856dc","import { createCompositeHandle } from './lang';\nimport Promise from '@dojo/shim/Promise';\n/**\n * No operation function to replace own once instance is destoryed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace own, once instance has been destoryed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} a handle for the handle, removes the handle for the instance and calls destroy\n     */\n    own(handles) {\n        const handle = Array.isArray(handles) ? createCompositeHandle(...handles) : handles;\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destrpys all handers registered for the instance\n     *\n     * @returns {Promise<any} a promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/core/Destroyable.mjs\n// module chunks = title-pane","import Map from '@dojo/shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines is the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                methods.forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/Evented.mjs\n// module id = ./node_modules/@dojo/core/Evented.mjs\n// module chunks = title-pane","import { assign } from '@dojo/shim/object';\nexport { assign } from '@dojo/shim/object';\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function create(prototype, ...mixins) {\n    if (!mixins.length) {\n        throw new RangeError('lang.create requires at least one mixin object.');\n    }\n    const args = mixins.slice();\n    args.unshift(Object.create(prototype));\n    return assign.apply(null, args);\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Creates a new object using the provided source's prototype as the prototype for the new object, and then\n * deep copies the provided source's values into the new target.\n *\n * @param source The object to duplicate\n * @return The new object\n */\nexport function duplicate(source) {\n    const target = Object.create(Object.getPrototypeOf(source));\n    return deepMixin(target, source);\n}\n/**\n * Determines whether two values are the same value.\n *\n * @param a First value to compare\n * @param b Second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport function isIdentical(a, b) {\n    return (a === b ||\n        /* both values are NaN */\n        (a !== a && b !== b));\n}\n/**\n * Returns a function that binds a method to the specified object at runtime. This is similar to\n * `Function.prototype.bind`, but instead of a function it takes the name of a method on an object.\n * As a result, the function returned by `lateBind` will always call the function currently assigned to\n * the specified property on the object as of the moment the function it returns is called.\n *\n * @param instance The context object\n * @param method The name of the method on the context object to bind to itself\n * @param suppliedArgs An optional array of values to prepend to the `instance[method]` arguments list\n * @return The bound function\n */\nexport function lateBind(instance, method, ...suppliedArgs) {\n    return suppliedArgs.length\n        ? function () {\n            const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n            // TS7017\n            return instance[method].apply(instance, args);\n        }\n        : function () {\n            // TS7017\n            return instance[method].apply(instance, arguments);\n        };\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\n/**\n * Returns an object with a destroy method that, when called, calls the passed-in destructor.\n * This is intended to provide a unified interface for creating \"remove\" / \"destroy\" handlers for\n * event listeners, timers, etc.\n *\n * @param destructor A function that will be called when the handle's `destroy` method is invoked\n * @return The handle object\n */\nexport function createHandle(destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            destructor.call(this);\n        }\n    };\n}\n/**\n * Returns a single handle that can be used to destroy multiple handles simultaneously.\n *\n * @param handles An array of handles with `destroy` methods\n * @return The handle object\n */\nexport function createCompositeHandle(...handles) {\n    return createHandle(function () {\n        for (let i = 0; i < handles.length; i++) {\n            handles[i].destroy();\n        }\n    });\n}\n//# sourceMappingURL=lang.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/lang.mjs\n// module id = ./node_modules/@dojo/core/lang.mjs\n// module chunks = title-pane","/**\n * Returns a v4 compliant UUID.\n *\n * @returns {string}\n */\nexport default function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n//# sourceMappingURL=uuid.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/core/uuid.mjs\n// module id = ./node_modules/@dojo/core/uuid.mjs\n// module chunks = title-pane","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures) ? staticFeatures.apply(globalScope) : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/has/has.mjs\n// module id = ./node_modules/@dojo/has/has.mjs\n// module chunks = title-pane","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Map.mjs\n// module id = ./node_modules/@dojo/shim/Map.mjs\n// module chunks = title-pane","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Promise.mjs\n// module id = ./node_modules/@dojo/shim/Promise.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike, ShimIterator } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let Set = global.Set;\nif (!true) {\n    Set = (_a = class Set {\n            constructor(iterable) {\n                this._setData = [];\n                this[Symbol.toStringTag] = 'Set';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            this.add(iterable[i]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.add(value);\n                        }\n                    }\n                }\n            }\n            add(value) {\n                if (this.has(value)) {\n                    return this;\n                }\n                this._setData.push(value);\n                return this;\n            }\n            clear() {\n                this._setData.length = 0;\n            }\n            delete(value) {\n                const idx = this._setData.indexOf(value);\n                if (idx === -1) {\n                    return false;\n                }\n                this._setData.splice(idx, 1);\n                return true;\n            }\n            entries() {\n                return new ShimIterator(this._setData.map((value) => [value, value]));\n            }\n            forEach(callbackfn, thisArg) {\n                const iterator = this.values();\n                let result = iterator.next();\n                while (!result.done) {\n                    callbackfn.call(thisArg, result.value, result.value, this);\n                    result = iterator.next();\n                }\n            }\n            has(value) {\n                return this._setData.indexOf(value) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._setData);\n            }\n            get size() {\n                return this._setData.length;\n            }\n            values() {\n                return new ShimIterator(this._setData);\n            }\n            [Symbol.iterator]() {\n                return new ShimIterator(this._setData);\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Set;\nvar _a;\n//# sourceMappingURL=Set.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Set.mjs\n// module id = ./node_modules/@dojo/shim/Set.mjs\n// module chunks = title-pane","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/shim/Symbol.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            Object.defineProperty(this, '_name', {\n                value: generateName()\n            });\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/shim/WeakMap.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/array.mjs\n// module id = ./node_modules/@dojo/shim/array.mjs\n// module chunks = title-pane","const globalObject = (function () {\n    if (typeof global !== 'undefined') {\n        // global spec defines a reference to the global object called 'global'\n        // https://github.com/tc39/proposal-global\n        // `global` is also defined in NodeJS\n        return global;\n    }\n    else if (typeof window !== 'undefined') {\n        // window is defined in browsers\n        return window;\n    }\n    else if (typeof self !== 'undefined') {\n        // self is defined in WebWorkers\n        return self;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/global.mjs\n// module id = ./node_modules/@dojo/shim/global.mjs\n// module chunks = title-pane","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/number.mjs\n// module id = ./node_modules/@dojo/shim/number.mjs\n// module chunks = title-pane","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function getOwnPropertyDescriptor(o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/object.mjs\n// module id = ./node_modules/@dojo/shim/object.mjs\n// module chunks = title-pane","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = codePoint % 0x400 + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (endPosition == null) {\n            endPosition = text.length;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/string.mjs\n// module id = ./node_modules/@dojo/shim/string.mjs\n// module chunks = title-pane","import has, { add } from '@dojo/has/has';\nimport global from '../global';\nexport default has;\nexport * from '@dojo/has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a:\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/has.mjs\n// module id = ./node_modules/@dojo/shim/support/has.mjs\n// module chunks = title-pane","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/shim/support/queue.mjs\n// module chunks = title-pane","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/shim/support/util.mjs\n// module id = ./node_modules/@dojo/shim/support/util.mjs\n// module chunks = title-pane","import { Evented } from '@dojo/core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        this.emit({ type: 'invalidate' });\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/widget-core/Injector.mjs\n// module chunks = title-pane","import { Evented } from '@dojo/core/Evented';\nimport Map from '@dojo/shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/widget-core/NodeHandler.mjs\n// module chunks = title-pane","import Promise from '@dojo/shim/Promise';\nimport Map from '@dojo/shim/Map';\nimport Symbol from '@dojo/shim/Symbol';\nimport { Evented } from '@dojo/core/Evented';\n/**\n * Widget base symbol type\n */\nexport const WIDGET_BASE_TYPE = Symbol('Widget Base');\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, item) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        this._injectorRegistry.set(label, item);\n        this.emitLoadedEvent(label, item);\n    }\n    get(label) {\n        if (!this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/widget-core/Registry.mjs\n// module chunks = title-pane","import { Map } from '@dojo/shim/Map';\nimport { Evented } from '@dojo/core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/widget-core/RegistryHandler.mjs\n// module chunks = title-pane","import Map from '@dojo/shim/Map';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { v } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nconst decoratorMap = new Map();\nconst boundAuto = auto.bind(null);\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            registry: () => {\n                return this.registry;\n            },\n            coreProperties: {},\n            rendering: false,\n            inputProperties: {}\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setCoreProperties__(coreProperties) {\n        const { baseRegistry } = coreProperties;\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n            if (this._registry === undefined) {\n                this._registry = new RegistryHandler();\n                this.own(this._registry);\n                this.own(this._registry.on('invalidate', this._boundInvalidate));\n            }\n            this._registry.base = baseRegistry;\n            this.invalidate();\n        }\n        instanceData.coreProperties = coreProperties;\n    }\n    __setProperties__(originalProperties) {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.inputProperties = originalProperties;\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                this._mapDiffPropertyReactions(properties, changedPropertyKeys).forEach((args, reaction) => {\n                    if (args.changed) {\n                        reaction.call(this, args.previousProperties, args.newProperties);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.dirty = false;\n        const render = this._runBeforeRenders();\n        let dNode = render();\n        dNode = this.runAfterRenders(dNode);\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    _mapDiffPropertyReactions(newProperties, changedPropertyKeys) {\n        const reactionFunctions = this.getDecorator('diffReaction');\n        return reactionFunctions.reduce((reactionPropertyMap, { reaction, propertyName }) => {\n            let reactionArguments = reactionPropertyMap.get(reaction);\n            if (reactionArguments === undefined) {\n                reactionArguments = {\n                    previousProperties: {},\n                    newProperties: {},\n                    changed: false\n                };\n            }\n            reactionArguments.previousProperties[propertyName] = this._properties[propertyName];\n            reactionArguments.newProperties[propertyName] = newProperties[propertyName];\n            if (changedPropertyKeys.indexOf(propertyName) !== -1) {\n                reactionArguments.changed = true;\n            }\n            reactionPropertyMap.set(reaction, reactionArguments);\n            return reactionPropertyMap;\n        }, new Map());\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            return afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/widget-core/WidgetBase.mjs\n// module chunks = title-pane","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/widget-core/animations/cssTransitions.mjs\n// module chunks = title-pane","import Symbol from '@dojo/shim/Symbol';\n/**\n * The symbol identifier for a WNode type\n */\nexport const WNODE = Symbol('Identifier for a WNode.');\n/**\n * The symbol identifier for a VNode type\n */\nexport const VNODE = Symbol('Identifier for a VNode.');\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === VNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w(widgetConstructor, properties, children = []) {\n    return {\n        children,\n        widgetConstructor,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none' }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: VNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/d.mjs\n// module id = ./node_modules/@dojo/widget-core/d.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nexport function afterRender(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default afterRender;\n//# sourceMappingURL=afterRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/afterRender.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/afterRender.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/alwaysRender.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/beforeProperties.mjs\n// module chunks = title-pane","import { CustomElementChildType } from '../registerCustomElement';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/customElement.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/diffProperty.mjs\n// module chunks = title-pane","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/handleDecorator.mjs\n// module chunks = title-pane","import WeakMap from '@dojo/shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injector = this.registry.getInjector(name);\n            if (injector) {\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injector) === -1) {\n                    this.own(injector.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injector);\n                }\n                return getProperties(injector.get(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/widget-core/decorators/inject.mjs\n// module chunks = title-pane","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/widget-core/diff.mjs\n// module chunks = title-pane","import { Destroyable } from '@dojo/core/Destroyable';\nimport Set from '@dojo/shim/Set';\nexport class Base extends Destroyable {\n    constructor(properties) {\n        super();\n        this._requestedNodeKeys = new Set();\n        this._invalidate = properties.invalidate;\n        this.nodeHandler = properties.nodeHandler;\n        if (properties.bind) {\n            this._bind = properties.bind;\n        }\n    }\n    has(key) {\n        return this.nodeHandler.has(key);\n    }\n    getNode(key) {\n        const stringKey = `${key}`;\n        const node = this.nodeHandler.get(stringKey);\n        if (!node && !this._requestedNodeKeys.has(stringKey)) {\n            const handle = this.nodeHandler.on(stringKey, () => {\n                handle.destroy();\n                this._requestedNodeKeys.delete(stringKey);\n                this.invalidate();\n            });\n            this.own(handle);\n            this._requestedNodeKeys.add(stringKey);\n        }\n        return node;\n    }\n    invalidate() {\n        this._invalidate();\n    }\n    afterRender() {\n        // Do nothing by default.\n    }\n}\nexport default Base;\n//# sourceMappingURL=Base.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/meta/Base.mjs\n// module id = ./node_modules/@dojo/widget-core/meta/Base.mjs\n// module chunks = title-pane","import { Base } from './Base';\nimport { deepAssign } from '@dojo/core/lang';\nconst defaultDimensions = {\n    offset: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    position: {\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n    },\n    scroll: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    size: {\n        width: 0,\n        height: 0\n    }\n};\nexport class Dimensions extends Base {\n    get(key) {\n        const node = this.getNode(key);\n        if (!node) {\n            return deepAssign({}, defaultDimensions);\n        }\n        const boundingDimensions = node.getBoundingClientRect();\n        return {\n            offset: {\n                height: node.offsetHeight,\n                left: node.offsetLeft,\n                top: node.offsetTop,\n                width: node.offsetWidth\n            },\n            position: {\n                bottom: boundingDimensions.bottom,\n                left: boundingDimensions.left,\n                right: boundingDimensions.right,\n                top: boundingDimensions.top\n            },\n            scroll: {\n                height: node.scrollHeight,\n                left: node.scrollLeft,\n                top: node.scrollTop,\n                width: node.scrollWidth\n            },\n            size: {\n                width: boundingDimensions.width,\n                height: boundingDimensions.height\n            }\n        };\n    }\n}\nexport default Dimensions;\n//# sourceMappingURL=Dimensions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/meta/Dimensions.mjs\n// module id = ./node_modules/@dojo/widget-core/meta/Dimensions.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { assign } from '@dojo/core/lang';\nimport cssTransitions from '../animations/cssTransitions';\nimport { afterRender } from './../decorators/afterRender';\nimport { v } from './../d';\nimport { dom } from './../vdom';\n/**\n * Represents the attach state of the projector\n */\nexport var ProjectorAttachState;\n(function (ProjectorAttachState) {\n    ProjectorAttachState[ProjectorAttachState[\"Attached\"] = 1] = \"Attached\";\n    ProjectorAttachState[ProjectorAttachState[\"Detached\"] = 2] = \"Detached\";\n})(ProjectorAttachState || (ProjectorAttachState = {}));\n/**\n * Attach type for the projector\n */\nexport var AttachType;\n(function (AttachType) {\n    AttachType[AttachType[\"Append\"] = 1] = \"Append\";\n    AttachType[AttachType[\"Merge\"] = 2] = \"Merge\";\n})(AttachType || (AttachType = {}));\nexport function ProjectorMixin(Base) {\n    class Projector extends Base {\n        constructor(...args) {\n            super(...args);\n            this._async = true;\n            this._projectorProperties = {};\n            this._projectionOptions = {\n                transitions: cssTransitions\n            };\n            this.root = document.body;\n            this.projectorState = ProjectorAttachState.Detached;\n        }\n        append(root) {\n            const options = {\n                type: AttachType.Append,\n                root\n            };\n            return this._attach(options);\n        }\n        merge(root) {\n            const options = {\n                type: AttachType.Merge,\n                root\n            };\n            return this._attach(options);\n        }\n        set root(root) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change root element');\n            }\n            this._root = root;\n        }\n        get root() {\n            return this._root;\n        }\n        get async() {\n            return this._async;\n        }\n        set async(async) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change async mode');\n            }\n            this._async = async;\n        }\n        sandbox(doc = document) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot create sandbox');\n            }\n            this._async = false;\n            const previousRoot = this.root;\n            /* free up the document fragment for GC */\n            this.own({\n                destroy: () => {\n                    this._root = previousRoot;\n                }\n            });\n            this._attach({\n                /* DocumentFragment is not assignable to Element, but provides everything needed to work */\n                root: doc.createDocumentFragment(),\n                type: AttachType.Append\n            });\n        }\n        setChildren(children) {\n            this.__setChildren__(children);\n        }\n        setProperties(properties) {\n            this.__setProperties__(properties);\n        }\n        __setProperties__(properties) {\n            if (this._projectorProperties && this._projectorProperties.registry !== properties.registry) {\n                if (this._projectorProperties.registry) {\n                    this._projectorProperties.registry.destroy();\n                }\n            }\n            this._projectorProperties = assign({}, properties);\n            super.__setCoreProperties__({ bind: this, baseRegistry: properties.registry });\n            super.__setProperties__(properties);\n        }\n        toHtml() {\n            if (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n                throw new Error('Projector is not attached, cannot return an HTML string of projection.');\n            }\n            return this._projection.domNode.childNodes[0].outerHTML;\n        }\n        afterRender(result) {\n            let node = result;\n            if (typeof result === 'string' || result === null || result === undefined) {\n                node = v('span', {}, [result]);\n            }\n            return node;\n        }\n        destroy() {\n            super.destroy();\n        }\n        _attach({ type, root }) {\n            if (root) {\n                this.root = root;\n            }\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                return this._attachHandle;\n            }\n            this.projectorState = ProjectorAttachState.Attached;\n            const handle = {\n                destroy: () => {\n                    if (this.projectorState === ProjectorAttachState.Attached) {\n                        this._projection = undefined;\n                        this.projectorState = ProjectorAttachState.Detached;\n                    }\n                }\n            };\n            this.own(handle);\n            this._attachHandle = handle;\n            this._projectionOptions = Object.assign({}, this._projectionOptions, { sync: !this._async });\n            switch (type) {\n                case AttachType.Append:\n                    this._projection = dom.append(this.root, this, this._projectionOptions);\n                    break;\n                case AttachType.Merge:\n                    this._projection = dom.merge(this.root, this, this._projectionOptions);\n                    break;\n            }\n            return this._attachHandle;\n        }\n    }\n    tslib_1.__decorate([\n        afterRender(),\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", [Object]),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], Projector.prototype, \"afterRender\", null);\n    return Projector;\n}\nexport default ProjectorMixin;\n//# sourceMappingURL=Projector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/mixins/Projector.mjs\n// module id = ./node_modules/@dojo/widget-core/mixins/Projector.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = Symbol('theme');\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, themeInjector);\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            const baseThemes = this.getDecorator('baseThemeClasses');\n            if (!this._registeredBaseTheme) {\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow),\n        tslib_1.__metadata(\"design:type\", Function),\n        tslib_1.__metadata(\"design:paramtypes\", []),\n        tslib_1.__metadata(\"design:returntype\", void 0)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/widget-core/mixins/Themed.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { WidgetBase } from './WidgetBase';\nimport { ProjectorMixin } from './mixins/Projector';\nimport { from } from '@dojo/shim/array';\nimport { w, dom } from './d';\nimport global from '@dojo/shim/global';\nimport Registry from './Registry';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = new Registry();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const Projector = ProjectorMixin(Wrapper);\n            this._projector = new Projector();\n            this._projector.setProperties({ registry });\n            this._projector.append(this);\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._projector) {\n                this._projector.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/widget-core/registerCustomElement.mjs\n// module chunks = title-pane","import global from '@dojo/shim/global';\nimport { from as arrayFrom } from '@dojo/shim/array';\nimport { isWNode, isVNode, VNODE, WNODE } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport WeakMap from '@dojo/shim/WeakMap';\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst emptyArray = [];\nexport const widgetInstanceMap = new WeakMap();\nconst instanceMap = new WeakMap();\nconst projectorStateMap = new WeakMap();\nfunction same(dnode1, dnode2) {\n    if (isVNode(dnode1) && isVNode(dnode2)) {\n        if (dnode1.tag !== dnode2.tag) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNode(dnode1) && isWNode(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.widgetConstructor !== dnode2.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nconst missingTransition = function () {\n    throw new Error('Provide a transitions object to the projectionOptions to do animations');\n};\nfunction getProjectionOptions(projectorOptions, projectorInstance) {\n    const defaults = {\n        namespace: undefined,\n        styleApplyer: function (domNode, styleName, value) {\n            domNode.style[styleName] = value;\n        },\n        transitions: {\n            enter: missingTransition,\n            exit: missingTransition\n        },\n        depth: 0,\n        merge: false,\n        sync: false,\n        projectorInstance\n    };\n    return Object.assign({}, defaults, projectorOptions);\n}\nfunction checkStyleValue(styleValue) {\n    if (typeof styleValue !== 'string') {\n        throw new Error('Style values must be strings');\n    }\n}\nfunction updateEvent(domNode, eventName, currentValue, projectionOptions, bind, previousValue) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode) || new WeakMap();\n    if (previousValue) {\n        const previousEvent = eventMap.get(previousValue);\n        domNode.removeEventListener(eventName, previousEvent);\n    }\n    let callback = currentValue.bind(bind);\n    if (eventName === 'input') {\n        callback = function (evt) {\n            currentValue.call(this, evt);\n            evt.target['oninput-value'] = evt.target.value;\n        }.bind(bind);\n    }\n    domNode.addEventListener(eventName, callback);\n    eventMap.set(currentValue, callback);\n    projectorState.nodeMap.set(domNode, eventMap);\n}\nfunction addClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.add(classNames[i]);\n        }\n    }\n}\nfunction removeClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.remove(classNames[i]);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, previous, current) {\n    const { diffType, properties, attributes } = current;\n    if (!diffType || diffType === 'vdom') {\n        return { properties: previous.properties, attributes: previous.attributes, events: previous.events };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: previous.attributes ? {} : undefined, events: previous.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = previous.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction focusNode(propValue, previousValue, domNode, projectionOptions) {\n    let result;\n    if (typeof propValue === 'function') {\n        result = propValue();\n    }\n    else {\n        result = propValue && !previousValue;\n    }\n    if (result === true) {\n        const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n        projectorState.deferredRenderCallbacks.push(() => {\n            domNode.focus();\n        });\n    }\n}\nfunction removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions, onlyEvents = false) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode);\n    if (eventMap) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n}\nfunction updateAttribute(domNode, attrName, attrValue, projectionOptions) {\n    if (projectionOptions.namespace === NAMESPACE_SVG && attrName === 'href') {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, projectionOptions) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, projectionOptions);\n        }\n    }\n}\nfunction updateProperties(domNode, previousProperties, properties, projectionOptions, includesEventsAndAttributes = true) {\n    let propertiesUpdated = false;\n    const propNames = Object.keys(properties);\n    const propCount = propNames.length;\n    if (propNames.indexOf('classes') === -1 && previousProperties.classes) {\n        if (Array.isArray(previousProperties.classes)) {\n            for (let i = 0; i < previousProperties.classes.length; i++) {\n                removeClasses(domNode, previousProperties.classes[i]);\n            }\n        }\n        else {\n            removeClasses(domNode, previousProperties.classes);\n        }\n    }\n    includesEventsAndAttributes && removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions);\n    for (let i = 0; i < propCount; i++) {\n        const propName = propNames[i];\n        let propValue = properties[propName];\n        const previousValue = previousProperties[propName];\n        if (propName === 'classes') {\n            const previousClasses = Array.isArray(previousValue) ? previousValue : [previousValue];\n            const currentClasses = Array.isArray(propValue) ? propValue : [propValue];\n            if (previousClasses && previousClasses.length > 0) {\n                if (!propValue || propValue.length === 0) {\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        removeClasses(domNode, previousClasses[i]);\n                    }\n                }\n                else {\n                    const newClasses = [...currentClasses];\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        const previousClassName = previousClasses[i];\n                        if (previousClassName) {\n                            const classIndex = newClasses.indexOf(previousClassName);\n                            if (classIndex === -1) {\n                                removeClasses(domNode, previousClassName);\n                            }\n                            else {\n                                newClasses.splice(classIndex, 1);\n                            }\n                        }\n                    }\n                    for (let i = 0; i < newClasses.length; i++) {\n                        addClasses(domNode, newClasses[i]);\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < currentClasses.length; i++) {\n                    addClasses(domNode, currentClasses[i]);\n                }\n            }\n        }\n        else if (propName === 'focus') {\n            focusNode(propValue, previousValue, domNode, projectionOptions);\n        }\n        else if (propName === 'styles') {\n            const styleNames = Object.keys(propValue);\n            const styleCount = styleNames.length;\n            for (let j = 0; j < styleCount; j++) {\n                const styleName = styleNames[j];\n                const newStyleValue = propValue[styleName];\n                const oldStyleValue = previousValue && previousValue[styleName];\n                if (newStyleValue === oldStyleValue) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (newStyleValue) {\n                    checkStyleValue(newStyleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\n                }\n                else {\n                    projectionOptions.styleApplyer(domNode, styleName, '');\n                }\n            }\n        }\n        else {\n            if (!propValue && typeof previousValue === 'string') {\n                propValue = '';\n            }\n            if (propName === 'value') {\n                const domValue = domNode[propName];\n                if (domValue !== propValue &&\n                    (domNode['oninput-value']\n                        ? domValue === domNode['oninput-value']\n                        : propValue !== previousValue)) {\n                    domNode[propName] = propValue;\n                    domNode['oninput-value'] = undefined;\n                }\n                if (propValue !== previousValue) {\n                    propertiesUpdated = true;\n                }\n            }\n            else if (propName !== 'key' && propValue !== previousValue) {\n                const type = typeof propValue;\n                if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                    updateEvent(domNode, propName.substr(2), propValue, projectionOptions, properties.bind, previousValue);\n                }\n                else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                    updateAttribute(domNode, propName, propValue, projectionOptions);\n                }\n                else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                    if (domNode[propName] !== propValue) {\n                        domNode[propName] = propValue;\n                    }\n                }\n                else {\n                    domNode[propName] = propValue;\n                }\n                propertiesUpdated = true;\n            }\n        }\n    }\n    return propertiesUpdated;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function toParentVNode(domNode) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        domNode,\n        type: VNODE\n    };\n}\nexport function toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        domNode: undefined,\n        type: VNODE\n    };\n}\nfunction toInternalWNode(instance, instanceData) {\n    return {\n        instance,\n        rendered: [],\n        coreProperties: instanceData.coreProperties,\n        children: instance.children,\n        widgetConstructor: instance.constructor,\n        properties: instanceData.inputProperties,\n        type: WNODE\n    };\n}\nexport function filterAndDecorateChildren(children, instance) {\n    if (children === undefined) {\n        return emptyArray;\n    }\n    children = Array.isArray(children) ? children : [children];\n    for (let i = 0; i < children.length;) {\n        const child = children[i];\n        if (child === undefined || child === null) {\n            children.splice(i, 1);\n            continue;\n        }\n        else if (typeof child === 'string') {\n            children[i] = toTextVNode(child);\n        }\n        else {\n            if (isVNode(child)) {\n                if (child.properties.bind === undefined) {\n                    child.properties.bind = instance;\n                    if (child.children && child.children.length > 0) {\n                        filterAndDecorateChildren(child.children, instance);\n                    }\n                }\n            }\n            else {\n                if (!child.coreProperties) {\n                    const instanceData = widgetInstanceMap.get(instance);\n                    child.coreProperties = {\n                        bind: instance,\n                        baseRegistry: instanceData.coreProperties.baseRegistry\n                    };\n                }\n                if (child.children && child.children.length > 0) {\n                    filterAndDecorateChildren(child.children, instance);\n                }\n            }\n        }\n        i++;\n    }\n    return children;\n}\nfunction nodeAdded(dnode, transitions) {\n    if (isVNode(dnode) && dnode.properties) {\n        const enterAnimation = dnode.properties.enterAnimation;\n        if (enterAnimation) {\n            if (typeof enterAnimation === 'function') {\n                enterAnimation(dnode.domNode, dnode.properties);\n            }\n            else {\n                transitions.enter(dnode.domNode, dnode.properties, enterAnimation);\n            }\n        }\n    }\n}\nfunction callOnDetach(dNodes, parentInstance) {\n    dNodes = Array.isArray(dNodes) ? dNodes : [dNodes];\n    for (let i = 0; i < dNodes.length; i++) {\n        const dNode = dNodes[i];\n        if (isWNode(dNode)) {\n            if (dNode.rendered) {\n                callOnDetach(dNode.rendered, dNode.instance);\n            }\n            if (dNode.instance) {\n                const instanceData = widgetInstanceMap.get(dNode.instance);\n                instanceData.onDetach();\n            }\n        }\n        else {\n            if (dNode.children) {\n                callOnDetach(dNode.children, parentInstance);\n            }\n        }\n    }\n}\nfunction nodeToRemove(dnode, transitions, projectionOptions) {\n    if (isWNode(dnode)) {\n        const rendered = dnode.rendered || emptyArray;\n        for (let i = 0; i < rendered.length; i++) {\n            const child = rendered[i];\n            if (isVNode(child)) {\n                child.domNode.parentNode.removeChild(child.domNode);\n            }\n            else {\n                nodeToRemove(child, transitions, projectionOptions);\n            }\n        }\n    }\n    else {\n        const domNode = dnode.domNode;\n        const properties = dnode.properties;\n        const exitAnimation = properties.exitAnimation;\n        if (properties && exitAnimation) {\n            domNode.style.pointerEvents = 'none';\n            const removeDomNode = function () {\n                domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n            };\n            if (typeof exitAnimation === 'function') {\n                exitAnimation(domNode, removeDomNode, properties);\n                return;\n            }\n            else {\n                transitions.exit(dnode.domNode, properties, exitAnimation, removeDomNode);\n                return;\n            }\n        }\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n    }\n}\nfunction checkDistinguishable(childNodes, indexToCheck, parentInstance) {\n    const childNode = childNodes[indexToCheck];\n    if (isVNode(childNode) && !childNode.tag) {\n        return; // Text nodes need not be distinguishable\n    }\n    const { key } = childNode.properties;\n    if (key === undefined || key === null) {\n        for (let i = 0; i < childNodes.length; i++) {\n            if (i !== indexToCheck) {\n                const node = childNodes[i];\n                if (same(node, childNode)) {\n                    let nodeIdentifier;\n                    const parentName = parentInstance.constructor.name || 'unknown';\n                    if (isWNode(childNode)) {\n                        nodeIdentifier = childNode.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = childNode.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child addded or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction updateChildren(parentVNode, oldChildren, newChildren, parentInstance, projectionOptions) {\n    oldChildren = oldChildren || emptyArray;\n    newChildren = newChildren;\n    const oldChildrenLength = oldChildren.length;\n    const newChildrenLength = newChildren.length;\n    const transitions = projectionOptions.transitions;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    let oldIndex = 0;\n    let newIndex = 0;\n    let i;\n    let textUpdated = false;\n    while (newIndex < newChildrenLength) {\n        const oldChild = oldIndex < oldChildrenLength ? oldChildren[oldIndex] : undefined;\n        const newChild = newChildren[newIndex];\n        if (isVNode(newChild) && typeof newChild.deferredPropertiesCallback === 'function') {\n            newChild.inserted = isVNode(oldChild) && oldChild.inserted;\n            addDeferredProperties(newChild, projectionOptions);\n        }\n        if (oldChild !== undefined && same(oldChild, newChild)) {\n            textUpdated = updateDom(oldChild, newChild, projectionOptions, parentVNode, parentInstance) || textUpdated;\n            oldIndex++;\n            newIndex++;\n            continue;\n        }\n        const findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n        const addChild = () => {\n            let insertBefore = undefined;\n            let child = oldChildren[oldIndex];\n            if (child) {\n                let nextIndex = oldIndex + 1;\n                while (insertBefore === undefined) {\n                    if (isWNode(child)) {\n                        if (child.rendered) {\n                            child = child.rendered[0];\n                        }\n                        else if (oldChildren[nextIndex]) {\n                            child = oldChildren[nextIndex];\n                            nextIndex++;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        insertBefore = child.domNode;\n                    }\n                }\n            }\n            createDom(newChild, parentVNode, insertBefore, projectionOptions, parentInstance);\n            nodeAdded(newChild, transitions);\n            const indexToCheck = newIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(newChildren, indexToCheck, parentInstance);\n            });\n        };\n        if (!oldChild || findOldIndex === -1) {\n            addChild();\n            newIndex++;\n            continue;\n        }\n        const removeChild = () => {\n            const indexToCheck = oldIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                callOnDetach(oldChild, parentInstance);\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            nodeToRemove(oldChild, transitions, projectionOptions);\n        };\n        const findNewIndex = findIndexOfChild(newChildren, oldChild, newIndex + 1);\n        if (findNewIndex === -1) {\n            removeChild();\n            oldIndex++;\n            continue;\n        }\n        addChild();\n        removeChild();\n        oldIndex++;\n        newIndex++;\n    }\n    if (oldChildrenLength > oldIndex) {\n        // Remove child fragments\n        for (i = oldIndex; i < oldChildrenLength; i++) {\n            const oldChild = oldChildren[i];\n            const indexToCheck = i;\n            projectorState.afterRenderCallbacks.push(() => {\n                callOnDetach(oldChild, parentInstance);\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            nodeToRemove(oldChildren[i], transitions, projectionOptions);\n        }\n    }\n    return textUpdated;\n}\nfunction addChildren(parentVNode, children, projectionOptions, parentInstance, insertBefore = undefined, childNodes) {\n    if (children === undefined) {\n        return;\n    }\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.merge && childNodes === undefined) {\n        childNodes = arrayFrom(parentVNode.domNode.childNodes);\n    }\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isVNode(child)) {\n            if (projectorState.merge && childNodes) {\n                let domElement = undefined;\n                while (child.domNode === undefined && childNodes.length > 0) {\n                    domElement = childNodes.shift();\n                    if (domElement && domElement.tagName === (child.tag.toUpperCase() || undefined)) {\n                        child.domNode = domElement;\n                    }\n                }\n            }\n            createDom(child, parentVNode, insertBefore, projectionOptions, parentInstance);\n        }\n        else {\n            createDom(child, parentVNode, insertBefore, projectionOptions, parentInstance, childNodes);\n        }\n    }\n}\nfunction initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions) {\n    addChildren(dnode, dnode.children, projectionOptions, parentInstance, undefined);\n    if (typeof dnode.deferredPropertiesCallback === 'function' && dnode.inserted === undefined) {\n        addDeferredProperties(dnode, projectionOptions);\n    }\n    if (dnode.attributes && dnode.events) {\n        updateAttributes(domNode, {}, dnode.attributes, projectionOptions);\n        updateProperties(domNode, {}, dnode.properties, projectionOptions, false);\n        removeOrphanedEvents(domNode, {}, dnode.events, projectionOptions, true);\n        const events = dnode.events;\n        Object.keys(events).forEach((event) => {\n            updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind);\n        });\n    }\n    else {\n        updateProperties(domNode, {}, dnode.properties, projectionOptions);\n    }\n    if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n        const instanceData = widgetInstanceMap.get(parentInstance);\n        instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n    }\n    dnode.inserted = true;\n}\nfunction createDom(dnode, parentVNode, insertBefore, projectionOptions, parentInstance, childNodes) {\n    let domNode;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (isWNode(dnode)) {\n        let { widgetConstructor } = dnode;\n        const parentInstanceData = widgetInstanceMap.get(parentInstance);\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            const item = parentInstanceData.registry().get(widgetConstructor);\n            if (item === null) {\n                return;\n            }\n            widgetConstructor = item;\n        }\n        const instance = new widgetConstructor();\n        dnode.instance = instance;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: projectionOptions.depth });\n                scheduleRender(projectionOptions);\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        const rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            const filteredRendered = filterAndDecorateChildren(rendered, instance);\n            dnode.rendered = filteredRendered;\n            addChildren(parentVNode, filteredRendered, projectionOptions, instance, insertBefore, childNodes);\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n    }\n    else {\n        if (projectorState.merge && projectorState.mergeElement !== undefined) {\n            domNode = dnode.domNode = projectionOptions.mergeElement;\n            projectorState.mergeElement = undefined;\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            return;\n        }\n        const doc = parentVNode.domNode.ownerDocument;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.domNode !== undefined && parentVNode.domNode) {\n                const newDomNode = dnode.domNode.ownerDocument.createTextNode(dnode.text);\n                if (parentVNode.domNode === dnode.domNode.parentNode) {\n                    parentVNode.domNode.replaceChild(newDomNode, dnode.domNode);\n                }\n                else {\n                    parentVNode.domNode.appendChild(newDomNode);\n                    dnode.domNode.parentNode && dnode.domNode.parentNode.removeChild(dnode.domNode);\n                }\n                dnode.domNode = newDomNode;\n            }\n            else {\n                domNode = dnode.domNode = doc.createTextNode(dnode.text);\n                if (insertBefore !== undefined) {\n                    parentVNode.domNode.insertBefore(domNode, insertBefore);\n                }\n                else {\n                    parentVNode.domNode.appendChild(domNode);\n                }\n            }\n        }\n        else {\n            if (dnode.domNode === undefined) {\n                if (dnode.tag === 'svg') {\n                    projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n                }\n                if (projectionOptions.namespace !== undefined) {\n                    domNode = dnode.domNode = doc.createElementNS(projectionOptions.namespace, dnode.tag);\n                }\n                else {\n                    domNode = dnode.domNode = dnode.domNode || doc.createElement(dnode.tag);\n                }\n            }\n            else {\n                domNode = dnode.domNode;\n            }\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            if (insertBefore !== undefined) {\n                parentVNode.domNode.insertBefore(domNode, insertBefore);\n            }\n            else if (domNode.parentNode !== parentVNode.domNode) {\n                parentVNode.domNode.appendChild(domNode);\n            }\n        }\n    }\n}\nfunction updateDom(previous, dnode, projectionOptions, parentVNode, parentInstance) {\n    if (isWNode(dnode)) {\n        const { instance } = previous;\n        const { parentVNode, dnode: node } = instanceMap.get(instance);\n        const previousRendered = node ? node.rendered : previous.rendered;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        dnode.instance = instance;\n        instanceMap.set(instance, { dnode, parentVNode });\n        if (instanceData.dirty === true) {\n            const rendered = instance.__render__();\n            instanceData.rendering = false;\n            dnode.rendered = filterAndDecorateChildren(rendered, instance);\n            updateChildren(parentVNode, previousRendered, dnode.rendered, instance, projectionOptions);\n        }\n        else {\n            instanceData.rendering = false;\n            dnode.rendered = previousRendered;\n        }\n        instanceData.nodeHandler.addRoot();\n    }\n    else {\n        if (previous === dnode) {\n            return false;\n        }\n        const domNode = (dnode.domNode = previous.domNode);\n        let textUpdated = false;\n        let updated = false;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.text !== previous.text) {\n                const newDomNode = domNode.ownerDocument.createTextNode(dnode.text);\n                domNode.parentNode.replaceChild(newDomNode, domNode);\n                dnode.domNode = newDomNode;\n                textUpdated = true;\n                return textUpdated;\n            }\n        }\n        else {\n            if (dnode.tag && dnode.tag.lastIndexOf('svg', 0) === 0) {\n                projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n            }\n            if (previous.children !== dnode.children) {\n                const children = filterAndDecorateChildren(dnode.children, parentInstance);\n                dnode.children = children;\n                updated =\n                    updateChildren(dnode, previous.children, children, parentInstance, projectionOptions) || updated;\n            }\n            const previousProperties = buildPreviousProperties(domNode, previous, dnode);\n            if (dnode.attributes && dnode.events) {\n                updateAttributes(domNode, previousProperties.attributes, dnode.attributes, projectionOptions);\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions, false) || updated;\n                removeOrphanedEvents(domNode, previousProperties.events, dnode.events, projectionOptions, true);\n                const events = dnode.events;\n                Object.keys(events).forEach((event) => {\n                    updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind, previousProperties.events[event]);\n                });\n            }\n            else {\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions) ||\n                        updated;\n            }\n            if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n                const instanceData = widgetInstanceMap.get(parentInstance);\n                instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n            }\n        }\n        if (updated && dnode.properties && dnode.properties.updateAnimation) {\n            dnode.properties.updateAnimation(domNode, dnode.properties, previous.properties);\n        }\n    }\n}\nfunction addDeferredProperties(vnode, projectionOptions) {\n    // transfer any properties that have been passed - as these must be decorated properties\n    vnode.decoratedDeferredProperties = vnode.properties;\n    const properties = vnode.deferredPropertiesCallback(!!vnode.inserted);\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    vnode.properties = Object.assign({}, properties, vnode.decoratedDeferredProperties);\n    projectorState.deferredRenderCallbacks.push(() => {\n        const properties = Object.assign({}, vnode.deferredPropertiesCallback(!!vnode.inserted), vnode.decoratedDeferredProperties);\n        updateProperties(vnode.domNode, vnode.properties, properties, projectionOptions);\n        vnode.properties = properties;\n    });\n}\nfunction runDeferredRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.deferredRenderCallbacks.length) {\n        if (projectionOptions.sync) {\n            while (projectorState.deferredRenderCallbacks.length) {\n                const callback = projectorState.deferredRenderCallbacks.shift();\n                callback && callback();\n            }\n        }\n        else {\n            global.requestAnimationFrame(() => {\n                while (projectorState.deferredRenderCallbacks.length) {\n                    const callback = projectorState.deferredRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction runAfterRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        while (projectorState.afterRenderCallbacks.length) {\n            const callback = projectorState.afterRenderCallbacks.shift();\n            callback && callback();\n        }\n    }\n    else {\n        if (global.requestIdleCallback) {\n            global.requestIdleCallback(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n        else {\n            setTimeout(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction scheduleRender(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        render(projectionOptions);\n    }\n    else if (projectorState.renderScheduled === undefined) {\n        projectorState.renderScheduled = global.requestAnimationFrame(() => {\n            render(projectionOptions);\n        });\n    }\n}\nfunction render(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectorState.renderScheduled = undefined;\n    const renderQueue = projectorState.renderQueue;\n    const renders = [...renderQueue];\n    projectorState.renderQueue = [];\n    renders.sort((a, b) => a.depth - b.depth);\n    while (renders.length) {\n        const { instance } = renders.shift();\n        const { parentVNode, dnode } = instanceMap.get(instance);\n        const instanceData = widgetInstanceMap.get(instance);\n        updateDom(dnode, toInternalWNode(instance, instanceData), projectionOptions, parentVNode, instance);\n    }\n    runAfterRenderCallbacks(projectionOptions);\n    runDeferredRenderCallbacks(projectionOptions);\n}\nexport const dom = {\n    append: function (parentNode, instance, projectionOptions = {}) {\n        const instanceData = widgetInstanceMap.get(instance);\n        const finalProjectorOptions = getProjectionOptions(projectionOptions, instance);\n        const projectorState = {\n            afterRenderCallbacks: [],\n            deferredRenderCallbacks: [],\n            nodeMap: new WeakMap(),\n            renderScheduled: undefined,\n            renderQueue: [],\n            merge: projectionOptions.merge || false,\n            mergeElement: projectionOptions.mergeElement\n        };\n        projectorStateMap.set(instance, projectorState);\n        finalProjectorOptions.rootNode = parentNode;\n        const parentVNode = toParentVNode(finalProjectorOptions.rootNode);\n        const node = toInternalWNode(instance, instanceData);\n        instanceMap.set(instance, { dnode: node, parentVNode });\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: finalProjectorOptions.depth });\n                scheduleRender(finalProjectorOptions);\n            }\n        };\n        updateDom(node, node, finalProjectorOptions, parentVNode, instance);\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n        runDeferredRenderCallbacks(finalProjectorOptions);\n        runAfterRenderCallbacks(finalProjectorOptions);\n        return {\n            domNode: finalProjectorOptions.rootNode\n        };\n    },\n    create: function (instance, projectionOptions) {\n        return this.append(document.createElement('div'), instance, projectionOptions);\n    },\n    merge: function (element, instance, projectionOptions = {}) {\n        projectionOptions.merge = true;\n        projectionOptions.mergeElement = element;\n        const projection = this.append(element.parentNode, instance, projectionOptions);\n        const projectorState = projectorStateMap.get(instance);\n        projectorState.merge = false;\n        return projection;\n    }\n};\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/widget-core/vdom.mjs\n// module chunks = title-pane","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/title-pane\");\n\nvar registerCustomElement = require('@dojo/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/title-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/title-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = title-pane","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = title-pane","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = title-pane","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = title-pane","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/base\",\"visuallyHidden\":\"_1AeWeApr\",\"focusable\":\"_1_qANqXi\",\"hidden\":\"_3QddUiBU\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/styles/base.m.css\n// module id = ./src/common/styles/base.m.css\n// module chunks = title-pane","import { AriaPropertyObject } from './interfaces';\n\nexport const enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function formatAriaProperties(aria: AriaPropertyObject): AriaPropertyObject {\n\tconst formattedAria = Object.keys(aria).reduce((a: AriaPropertyObject, key: string) => {\n\t\ta[`aria-${key.toLowerCase()}`] = aria[key];\n\t\treturn a;\n\t}, {});\n\treturn formattedAria;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/common/util.ts","import global from '@dojo/shim/global';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport { diffProperty } from '@dojo/widget-core/decorators/diffProperty';\nimport { shallow } from '@dojo/widget-core/diff';\n\nexport interface ListenerObject {\n\t[index: string]: (event?: any) => void;\n}\n\nexport interface GlobalEventProperties extends Partial<RegisteredListeners> {\n\twindow?: ListenerObject;\n\tdocument?: ListenerObject;\n}\n\nexport interface RegisteredListeners {\n\twindow: ListenerObject;\n\tdocument: ListenerObject;\n}\n\nexport class GlobalEvent extends WidgetBase<GlobalEventProperties> {\n\n\tprivate _listeners: RegisteredListeners = {\n\t\twindow: {},\n\t\tdocument: {}\n\t};\n\n\tprivate _registerListeners(type: 'window' | 'document', previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tconst registeredListeners: ListenerObject = {};\n\t\tpreviousListeners[type] && Object.keys(previousListeners[type]).forEach((eventName) => {\n\t\t\tconst newListener = newListeners[type][eventName];\n\t\t\tif (newListener === undefined) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t}\n\t\t\telse if (previousListeners[type][eventName] !== newListener) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t\tglobal[type].addEventListener(eventName, newListener);\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t});\n\n\t\tnewListeners[type] && Object.keys(newListeners[type]).forEach((eventName) => {\n\t\t\tif (previousListeners[type] === undefined || previousListeners[type][eventName] === undefined) {\n\t\t\t\tglobal[type].addEventListener(eventName, newListeners[type][eventName]);\n\t\t\t\tregisteredListeners[eventName] = newListeners[type][eventName];\n\t\t\t}\n\t\t});\n\t\tthis._listeners[type] = registeredListeners;\n\t}\n\n\tprivate _removeAllRegisteredListeners(type: 'window' | 'document') {\n\t\tObject.keys(this._listeners[type]).forEach((eventName) => {\n\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t});\n\t}\n\n\t@diffProperty('window', shallow)\n\tprotected onWindowListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('window', previousListeners, newListeners);\n\t}\n\n\t@diffProperty('document', shallow)\n\tprotected onDocumentListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('document', previousListeners, newListeners);\n\t}\n\n\tprotected onDetach() {\n\t\tthis._removeAllRegisteredListeners('window');\n\t\tthis._removeAllRegisteredListeners('document');\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tif (this.children.length > 0) {\n\t\t\treturn this.children;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default GlobalEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/global-event/index.ts","import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/widget-core/mixins/Themed';\nimport { v } from '@dojo/widget-core/d';\nimport { CustomAriaProperties } from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/icon.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\nimport { customElement } from '@dojo/widget-core/decorators/customElement';\n\nexport type IconType = keyof typeof css;\n\n/**\n * @type IconProperties\n *\n * Properties that can be set on an Icon component\n *\n * @property type           Icon type, e.g. downIcon, searchIcon, etc.\n * @property altText        An optional, visually hidden label for the icon\n */\nexport interface IconProperties extends ThemedProperties, CustomAriaProperties {\n\ttype: IconType;\n\taltText?: string;\n}\n\nexport const ThemedBase = ThemedMixin(WidgetBase);\n\n@theme(css)\n@customElement<IconProperties>({\n\ttag: 'dojo-icon',\n\tproperties: [\n\t\t'theme',\n\t\t'aria',\n\t\t'extraClasses'\n\t],\n\tattributes: [ 'type', 'altText' ]\n})\nexport class IconBase<P extends IconProperties = IconProperties> extends ThemedBase<P, null> {\n\n\tprotected renderAltText(altText: string): DNode {\n\t\treturn v('span', { classes: [ baseCss.visuallyHidden ] }, [ altText ]);\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\taria = {\n\t\t\t\thidden: 'true'\n\t\t\t},\n\t\t\ttype,\n\t\t\taltText\n\t\t} = this.properties;\n\n\t\treturn v('span', { classes: this.theme(css.root) }, [\n\t\t\tv('i', {\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\tclasses: this.theme([ css.icon, css[type] ])\n\t\t\t}),\n\t\t\taltText ? this.renderAltText(altText) : null\n\t\t]);\n\t}\n}\n\nexport default class Icon extends IconBase<IconProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/icon/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/icon\",\"root\":\"_2L6Ls-Zy\",\"icon\":\"_3tF1vZM-\",\"downIcon\":\"_3GFyIk3G\",\"leftIcon\":\"_1db8DKc8\",\"rightIcon\":\"_2a143YET\",\"closeIcon\":\"w1WZiet2\",\"plusIcon\":\"_2V_909OC\",\"minusIcon\":\"_27KOe4gH\",\"checkIcon\":\"mKil4MCX\",\"upIcon\":\"Rw4TXrdb\",\"upAltIcon\":\"b2BPqdCO\",\"downAltIcon\":\"_3QpkEw-I\",\"searchIcon\":\"_3MWqsC_b\",\"barsIcon\":\"_3uXWm-H6\",\"settingsIcon\":\"_3V--OLwl\",\"alertIcon\":\"_3YjJOXWh\",\"helpIcon\":\"_3mL91Z0s\",\"infoIcon\":\"dZLeo6Sf\",\"phoneIcon\":\"_1vzkNuNB\",\"editIcon\":\"_2y3IH3o2\",\"dateIcon\":\"_1_x6RqtA\",\"linkIcon\":\"HkV2v3yK\",\"locationIcon\":\"_24-7y_Lz\",\"secureIcon\":\"_2cTDxmou\",\"mailIcon\":\"_12PMYHnq\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/icon.m.css\n// module id = ./src/theme/icon.m.css\n// module chunks = title-pane","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/title-pane\",\"title\":\"_1gwpzvDR\",\"closeable\":\"_2H5fznOm\",\"arrow\":\"_3mO_t3y-\",\"root\":\"_3J-5zRiD\",\"open\":\"_1bhv7rO1\",\"content\":\"bQNuoWTR\",\"titleButton\":\"_1NKNSL8y\",\"contentTransition\":\"_2SrMdJzf\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/title-pane.m.css\n// module id = ./src/theme/title-pane.m.css\n// module chunks = title-pane","import uuid from '@dojo/core/uuid';\nimport { DNode } from '@dojo/widget-core/interfaces';\nimport { theme, ThemedMixin, ThemedProperties } from '@dojo/widget-core/mixins/Themed';\nimport { v, w } from '@dojo/widget-core/d';\nimport { WidgetBase } from '@dojo/widget-core/WidgetBase';\n\nimport Icon from '../icon/index';\nimport * as fixedCss from './styles/title-pane.m.css';\nimport * as css from '../theme/title-pane.m.css';\nimport { Dimensions } from '@dojo/widget-core/meta/Dimensions';\nimport { customElement } from '@dojo/widget-core/decorators/customElement';\nimport GlobalEvent from '../global-event/index';\n\n/**\n * @type TitlePaneProperties\n *\n * Properties that can be set on a TitlePane component\n *\n * @property closeable          If false the pane will not collapse in response to clicking the title\n * @property headingLevel       'aria-level' for the title's DOM node\n * @property onRequestClose     Called when the title of an open pane is clicked\n * @property onRequestOpen      Called when the title of a closed pane is clicked\n * @property open               If true the pane is opened and content is visible\n * @property title              Title to display above the content\n */\nexport interface TitlePaneProperties extends ThemedProperties {\n\tcloseable?: boolean;\n\theadingLevel?: number;\n\tonRequestClose?(key: string | number | undefined): void;\n\tonRequestOpen?(key: string | number | undefined): void;\n\topen?: boolean;\n\ttitle: string;\n}\n\nexport const ThemedBase = ThemedMixin(WidgetBase);\n\n@theme(css)\n@customElement<TitlePaneProperties>({\n\ttag: 'dojo-title-pane',\n\tproperties: [ 'theme', 'extraClasses', 'open', 'closeable', 'headingLevel' ],\n\tattributes: [ 'title', 'key' ],\n\tevents: [\n\t\t'onRequestClose',\n\t\t'onRequestOpen'\n\t]\n})\nexport class TitlePaneBase<P extends TitlePaneProperties = TitlePaneProperties> extends ThemedBase<P> {\n\tprivate _id = uuid();\n\tprivate _open: boolean;\n\n\tprivate _onWindowResize = () => {\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onTitleClick(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis._toggle();\n\t}\n\n\tprivate _toggle() {\n\t\tconst {\n\t\t\tcloseable = true,\n\t\t\tkey,\n\t\t\tonRequestClose,\n\t\t\tonRequestOpen,\n\t\t\topen = true\n\t\t} = this.properties;\n\n\t\tif (!closeable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (open) {\n\t\t\tonRequestClose && onRequestClose(key);\n\t\t}\n\t\telse {\n\t\t\tonRequestOpen && onRequestOpen(key);\n\t\t}\n\t}\n\n\tprotected getButtonContent(): DNode {\n\t\treturn this.properties.title;\n\t}\n\n\tprotected getFixedModifierClasses(): (string | null)[] {\n\t\tconst { closeable = true } = this.properties;\n\t\treturn [\n\t\t\tcloseable ? fixedCss.closeableFixed : null\n\t\t];\n\t}\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst { closeable = true } = this.properties;\n\t\treturn [\n\t\t\tcloseable ? css.closeable : null\n\t\t];\n\t}\n\n\tprotected getPaneContent(): DNode[] {\n\t\treturn this.children;\n\t}\n\n\tprotected renderExpandIcon(): DNode {\n\t\tconst { open = true } = this.properties;\n\t\treturn v('span', { classes: this.theme(css.arrow) }, [\n\t\t\tw(Icon, { type: open ? 'downIcon' : 'rightIcon' })\n\t\t]);\n\t}\n\n\tprotected getPaneStyles(): any {\n\t\tconst { open = true } = this.properties;\n\t\tconst contentDimensions = this.meta(Dimensions).get('content');\n\t\treturn { marginTop: open ? '0px' : `-${contentDimensions.offset.height}px` };\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tcloseable = true,\n\t\t\theadingLevel,\n\t\t\topen = true\n\t\t} = this.properties;\n\n\t\tlet transition = false;\n\n\t\tif (open !== this._open) {\n\t\t\ttransition = true;\n\t\t\tthis._open = open;\n\t\t}\n\n\t\treturn v('div', {\n\t\t\tclasses: [ ...this.theme([\n\t\t\t\tcss.root,\n\t\t\t\topen ? css.open : null\n\t\t\t]), fixedCss.rootFixed ]\n\t\t}, [\n\t\t\tw(GlobalEvent, { key: 'global', window: { resize: this._onWindowResize } }),\n\t\t\tv('div', {\n\t\t\t\t'aria-level': headingLevel ? `${headingLevel}` : null,\n\t\t\t\tclasses: [ ...this.theme([ css.title, ...this.getModifierClasses() ]), fixedCss.titleFixed, ...this.getFixedModifierClasses() ],\n\t\t\t\trole: 'heading'\n\t\t\t}, [\n\t\t\t\tv('button', {\n\t\t\t\t\t'aria-controls': `${this._id}-content`,\n\t\t\t\t\t'aria-expanded': `${open}`,\n\t\t\t\t\tdisabled: !closeable,\n\t\t\t\t\tclasses: [ fixedCss.titleButtonFixed, ...this.theme([css.titleButton]) ],\n\t\t\t\t\tid: `${this._id}-title`,\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tonclick: this._onTitleClick\n\t\t\t\t}, [\n\t\t\t\t\tthis.renderExpandIcon(),\n\t\t\t\t\tthis.getButtonContent()\n\t\t\t\t])\n\t\t\t]),\n\t\t\tv('div', {\n\t\t\t\t'aria-hidden': open ? null : 'true',\n\t\t\t\t'aria-labelledby': `${this._id}-title`,\n\t\t\t\tclasses: [ ...this.theme([ css.content, transition ? css.contentTransition : null ]), fixedCss.contentFixed ],\n\t\t\t\tid: `${this._id}-content`,\n\t\t\t\tkey: 'content',\n\t\t\t\tstyles: this.getPaneStyles()\n\t\t\t}, this.getPaneContent())\n\t\t]);\n\t}\n}\n\nexport default class TitlePane extends TitlePaneBase<TitlePaneProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/title-pane/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/title-pane\",\"rootFixed\":\"oPswNsVU\",\"titleFixed\":\"_1-iVY6ih\",\"titleButtonFixed\":\"_3JEqs4mq\",\"contentFixed\":\"_3kE1qhAE\",\"closeableFixed\":\"x4J9PUPQ\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/title-pane/styles/title-pane.m.css\n// module id = ./src/title-pane/styles/title-pane.m.css\n// module chunks = title-pane"],"sourceRoot":""}